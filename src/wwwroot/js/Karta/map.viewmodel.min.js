(function(n){"use strict";(function(t){(function(t){t.ViewModel=function(){this.isOpen=new ko.observable(!1);var n=this;this.isOpen.subscribe(function(t){!t&&n.markAsImplementedPromise&&n.markAsImplementedPromise.reject()});this.objectName=new ko.observable("");this.isLoading=new ko.observable(!1);this.errorOccured=new ko.observable(!1);this.markAsImplementedPromise=null;this.flagAsImplementedMethodUrlPostfix=null;this.doesSnapshotExists=new ko.observable(!1);this.difference=new ko.observableArray};t.ViewModel.prototype={openNpcCompare:function(n,t){return this.isOpen(!0),this.objectName(t?t:""),this.flagAsImplementedMethodUrlPostfix="FlagNpcAsImplemented?npcId="+n,this.loadCompareResult("CompareNpc?npcId="+n)},openItemCompare:function(n,t){return this.isOpen(!0),this.objectName(t?t:""),this.flagAsImplementedMethodUrlPostfix="FlagItemAsImplemented?itemId="+n,this.loadCompareResult("CompareItem?itemId="+n)},openSkillCompare:function(n,t){return this.isOpen(!0),this.objectName(t?t:""),this.flagAsImplementedMethodUrlPostfix="FlagSkillAsImplemented?skillId="+n,this.loadCompareResult("CompareSkill?skillId="+n)},openDialogCompare:function(n,t){return this.isOpen(!0),this.objectName(t?t:""),this.flagAsImplementedMethodUrlPostfix="FlagDialogAsImplemented?dialogId="+n,this.loadCompareResult("CompareDialog?dialogId="+n)},openQuestCompare:function(n,t){return this.isOpen(!0),this.objectName(t?t:""),this.flagAsImplementedMethodUrlPostfix="FlagQuestAsImplemented?questId="+n,this.loadCompareResult("CompareQuest?questId="+n)},openMarkerCompare:function(n,t,i){return this.isOpen(!0),this.objectName(""),this.flagAsImplementedMethodUrlPostfix="FlagMarkerAsImplemented?mapId="+n+"&markerId="+t+"&markerType="+i,this.loadCompareResult("CompareMarker?mapId="+n+"&markerId="+t+"&markerType="+i)},loadCompareResult:function(n){this.isLoading(!0);this.errorOccured(!1);this.difference([]);var t=this;return jQuery.ajax({url:"/api/ImplementationStatusApi/"+n,type:"GET"}).done(function(n){t.isLoading(!1);t.addExpandedObservable(n.compareDifference);t.doesSnapshotExists(n.doesSnapshotExist);n.compareDifference&&t.difference(n.compareDifference)}).fail(function(){t.isLoading(!1);t.errorOccured(!0)}),this.markAsImplementedPromise=new jQuery.Deferred,this.markAsImplementedPromise.promise()},addExpandedObservable:function(n){if(n)for(var t=0;t<n.length;++t)n[t].isExpanded=new ko.observable(!0),this.addExpandedObservable(n[t].subDifferences)},toggleCompareResultExpanded:function(n){n.isExpanded(!n.isExpanded())},markAsImplemented:function(){this.isLoading(!0);this.errorOccured(!1);var t=this;jQuery.ajax({url:"/api/ImplementationStatusApi/"+this.flagAsImplementedMethodUrlPostfix,headers:n.Util.generateAntiForgeryHeader(),type:"POST"}).done(function(){window.refreshImplementationStatusList&&window.refreshImplementationStatusList();t.markAsImplementedPromise.resolve();t.markAsImplementedPromise=null;t.isLoading(!1);t.isOpen(!1)}).fail(function(){t.isLoading(!1);t.errorOccured(!0)})},closeDialog:function(){this.isOpen(!1)}}})(t.CompareDialog=t.CompareDialog||{})})(n.ImplementationStatus=n.ImplementationStatus||{})})(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(){L.Draw.ColorPicker=L.Draw.Feature.extend({statics:{TYPE:"colorpicker"},options:{availableGeometryColors:[],viewModel:null},initialize:function(n,t){this.type=L.Draw.ColorPicker.TYPE;L.Draw.Feature.prototype.initialize.call(this,n,t)},overwriteAction:function(){var n=[],t=this;return jQuery.each(this.options.availableGeometryColors,function(i,r){n.push({title:r.name,text:r.name,callback:function(){this.pickColor(r.color)},context:t})}),n},pickColor:function(n){this.options.viewModel.mapGeometryToolbar.options.draw.rectangle.shapeOptions.color=n;this.options.viewModel.mapGeometryToolbar.options.draw.polyline.shapeOptions.color=n;this.options.viewModel.mapGeometryToolbar.options.draw.polygon.shapeOptions.color=n;this.options.viewModel.mapGeometryToolbar.options.draw.circle.shapeOptions.color=n;this.disable()}})})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(n){n.addColorpickerToDrawToolbar=function(){var n=L.DrawToolbar.prototype.getActions;L.DrawToolbar.prototype.getActions=function(t){var i=n.apply(this,arguments);return t.overwriteAction&&(i=t.overwriteAction()),i};L.DrawToolbar.include({getModeHandlers:function(n){return[{enabled:this.options.polyline,handler:new L.Draw.Polyline(n,this.options.polyline),title:L.drawLocal.draw.toolbar.buttons.polyline},{enabled:this.options.polygon,handler:new L.Draw.Polygon(n,this.options.polygon),title:L.drawLocal.draw.toolbar.buttons.polygon},{enabled:this.options.rectangle,handler:new L.Draw.Rectangle(n,this.options.rectangle),title:L.drawLocal.draw.toolbar.buttons.rectangle},{enabled:this.options.circle,handler:new L.Draw.Circle(n,this.options.circle),title:L.drawLocal.draw.toolbar.buttons.circle},{enabled:this.options.colorPicker,handler:new L.Draw.ColorPicker(n,this.options.colorPicker),title:L.drawLocal.draw.toolbar.buttons.circle}]}})}})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(t){(function(){if(typeof ko!="undefined"){var f=256,o=8,s=2,t=null,i=null,r=null;n.Karta.Map.readUrlMapLocations=function(){t=parseFloat(n.Util.getParameterFromUrl("mapLat"));i=parseFloat(n.Util.getParameterFromUrl("mapLong"));r=parseInt(n.Util.getParameterFromUrl("mapZoom"))};n.Karta.Map.readUrlMapLocations();function u(n){return ko.isObservable(n)?n():n}function e(n,t,i){var r,s,o,u,e;if(t!==null){var f=L.Browser.msPointer,h=f?"MSPointerDown":"pointerdown",c=f?"MSPointerMove":"pointermove",l=f?"MSPointerUp":"pointerup",a=f?"MSPointerCancel":"pointercancel";for(r in t)if(s=i?r.indexOf("_leaflet_")!==-1:!0,t.hasOwnProperty(r)&&s){if(u=[],r.indexOf("touchstart")!==-1?u=[h]:r.indexOf("touchmove")!==-1?u=[c]:r.indexOf("touchend")!==-1&&(u=[l,a]),o=t[r],u.length>0&&typeof o=="function")for(e=0;e<u.length;++e)n.removeEventListener(u[e],o,!1);t[r]=null;delete t[r]}}}function h(e,h,c,l){var b=h(),v=b,y=c.get("mapMaxZoom"),p=c.get("mapImageWidth"),w=c.get("mapImageHeight"),ut,ft,nt,tt,it,rt;if(!v||!y||!p||!w)throw"Missing binding values for map";v=u(v);y=u(y);p=u(p);w=u(w);var k=Math.pow(2,y+o),d=0,g=0;p>w?(d=k,g=w/p*k):(g=k,d=p/w*k);ut=Math.floor(p/f);ft=Math.floor(w/f);ko.bindingHandlers.map.nextMapId||(ko.bindingHandlers.map.nextMapId=0);jQuery(e).attr("id")||(jQuery(e).attr("id","Map_"+ko.bindingHandlers.map.nextMapId),++ko.bindingHandlers.map.nextMapId);var a=L.map(jQuery(e).attr("id")),et=a.unproject([d,0],y),ot=a.unproject([0,g],y),st=new L.LatLngBounds(ot,et),ht=v;v=v.replace("{maxZoom}",y);v=v.replace("{maxTileCountX}",ut);v=v.replace("{maxTileCountY}",ft);L.tileLayer(v,{maxZoom:y,crs:L.CRS.Simple,noWrap:!0,bounds:st}).addTo(a);var ct=a.unproject([p,0],y),lt=a.unproject([0,w],y),at=new L.LatLngBounds(lt,ct);if(a.setMaxBounds(at),nt=a.unproject([p*.5,w*.5],0),tt=s,t==null||i==null||isNaN(t)||isNaN(i)||(nt=new L.LatLng(t,i),t=null,i=null),r==null||isNaN(r)||(tt=r,r=null),a.setView(nt,Math.min(tt,y)),ko.isObservable(b)&&(b._map=a,b._mapTemplateUrl=ht),it=c.get("mapClick"),it)a.on("click",function(n){it.apply(l.$data,[a,n.latlng])});n.Karta.Map.refreshUrlMapLocations=function(){var t="mapLat="+a.getCenter().lat,n;t+="&mapLong="+a.getCenter().lng;t+="&mapZoom="+a.getZoom();n=window.location.search;n?(n=n.replace(/mapLat=.*?&mapLong=.*?&mapZoom=.*?(&|$)/i,""),n[n.length-1]!="&"&&(n+="&"),n+=t):n="?"+t;window.history.replaceState(n,null,n)};a.on("zoomend moveend",function(){n.Karta.Map.refreshUrlMapLocations()});rt=c.get("mapReady");rt&&rt.apply(l.$data,[a])}ko.bindingHandlers.map={init:function(){},update:function(n,t,i,r,f){var o=t(),s=u(o);o._mapTemplateUrl&&o._mapTemplateUrl==s||(o._map&&(o._map.remove(),e(n,n._leaflet_events,!1),e(n,n,!0),o._map=null),h(n,t,i,f))}}}})(t.Map=t.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(n){var i=600,t={polygon:0,circle:1,lineString:2,rectangle:3},r=100;n.BaseMarker=function(){this.marker=null;this.id="";this.mapId="";this.editGeometryCallback=null;this.editCallback=null;this.deleteCallback=null;this.isDisabled=!1;this.chapterPixelCoords=[];this.addedInChapter=-1;this.deletedInChapter=-1;this.isTrackingImplementationStatus=!1;this.isImplemented=!1;this.markerType="";this.serializePropertyName="";this.compareDialog=null;this.popupContentObject=null;this.markerGeometry=[]};n.BaseMarker.prototype={getIconUrl:function(){return""},getIconRetinaUrl:function(){return""},initMarker:function(t){var u=this.buildIcon(),r;this.marker=L.marker(t,{draggable:!this.isDisabled,icon:u});r=this;this.marker.bindPopup(function(){return r.loadContent().done(function(t){var i;if(!r.isDisabled){if(t+="<div class='gn-kartaPopupButtons'>",t+="<a class='gn-clickable gn-kartaCopyMarkerLink' title='"+n.Localization.CopyLinkToMarkerTooltip+"'><i class='glyphicon glyphicon-link'><\/i><\/a>",t+="<a class='gn-clickable gn-kartaEditMarkerGeometryButton' title='"+n.Localization.EditMarkerGeometryTooltip+"'><i class='glyphicon glyphicon-record'><\/i><\/a>",r.editCallback&&(t+="<a class='gn-clickable gn-kartaEditMarkerButton' title='"+n.Localization.EditMarkerTooltip+"'><i class='glyphicon glyphicon-pencil'><\/i><\/a>"),r.isTrackingImplementationStatus&&n.hasImplementationStatusTrackerRights){var u="glyphicon-remove",f="gn-clickable text-danger",e=n.Localization.MarkerIsNotImplementedTooltip;r.isImplemented&&(u="glyphicon-ok",f="text-success",e=n.Localization.MarkerIsImplementedTooltip);t+="<a class='gn-kartaMarkAsImplementedMarkerButton "+f+"' title='"+e+"'><i class='glyphicon "+u+"'><\/i><\/a>"}t+="<a class='gn-clickable gn-kartaDeleteMarkerButton' title='"+n.Localization.DeleteMarkerTooltip+"'><i class='glyphicon glyphicon-trash'><\/i><\/a>";t+="<\/div>"}t="<div>"+t+"<\/div>";i=jQuery(t);i.find(".gn-kartaCopyMarkerLink").click(function(){r.copyMarkerLink(this)});i.find(".gn-kartaEditMarkerGeometryButton").click(function(){r.callEditGeometry()});i.find(".gn-kartaEditMarkerButton").click(function(){r.callEdit()});i.find(".gn-kartaDeleteMarkerButton").click(function(){r.callDelete()});i.find(".gn-kartaMarkAsImplementedMarkerButton").click(function(){r.openCompareDialog(i)});r.popupContentObject=i;r.setPopupContent(i[0])}).fail(function(){r.setPopupContent("<i class='glyphicon glyphicon-warning-sign text-danger' title='"+n.Localization.ErrorOccured+"'><\/i>")}),"<i class='glyphicon glyphicon-refresh spinning'><\/i>"},{maxWidth:i})},buildIcon:function(){var t=this.getIconUrl(),n;return(window.devicePixelRatio||window.screen.deviceXDPI/window.screen.logicalXDPI)>1&&(t=this.getIconRetinaUrl()),n=this.getIconLabel(),n||(n=""),new L.DivIcon({iconAnchor:[12,41],iconSize:[25,41],popupAnchor:[1,-43],shadowSize:[41,41],tooltipAnchor:[16,-28],className:"gn-kartaIcon",html:"<img class='gn-kartaIconShadowImage' src='/img/karta/markerShadow.png'/><img src='"+t+"' style='width: 25px; height: 41px;'/><div class='gn-kartaIconLabel'>"+n+"<\/div>"})},getIconLabel:function(){return""},setPopupContent:function(n){var t=this.marker.getPopup();t.setContent(n);t.update()},closePopup:function(){this.marker&&this.marker.closePopup()},zoomOn:function(n){if(this.marker){this.marker.openPopup();var t=[this.marker.getLatLng()],i=L.latLngBounds(t);n.fitBounds(i)}},setMarkerType:function(n){this.markerType=n},setMapId:function(n){this.mapId=n},setCompareDialog:function(n){this.compareDialog=n},flagAsNotImplemented:function(){this.isImplemented&&(this.isImplemented=!1,this.popupContentObject!=null&&(this.popupContentObject.find(".gn-kartaMarkAsImplementedMarkerButton").removeClass("text-success").addClass("text-danger gn-clickable").prop("title",n.Localization.MarkerIsNotImplementedTooltip),this.popupContentObject.find(".gn-kartaMarkAsImplementedMarkerButton > i").removeClass("glyphicon-ok").addClass("glyphicon-remove")))},openCompareDialog:function(t){if(!this.isImplemented){var i=this;this.compareDialog.openMarkerCompare(this.mapId,this.id,this.markerType).done(function(){i.isImplemented=!0;t.find(".gn-kartaMarkAsImplementedMarkerButton").removeClass("text-danger gn-clickable").addClass("text-success").prop("title",n.Localization.MarkerIsImplementedTooltip);t.find(".gn-kartaMarkAsImplementedMarkerButton > i").removeClass("glyphicon-remove").addClass("glyphicon-ok")})}},loadContent:function(){var n=new jQuery.Deferred;return n.resolve(""),n.promise()},setId:function(n){this.id=n},setPixelCoords:function(n,t){this.x=n;this.y=t},setChapterPixelCoords:function(n,t,i){this.chapterPixelCoords||(this.chapterPixelCoords=[]);for(var r=0;r<this.chapterPixelCoords.length;++r)if(this.chapterPixelCoords[r].chapterNumber==n){this.chapterPixelCoords[r].x=t;this.chapterPixelCoords[r].y=i;return}this.chapterPixelCoords.push({chapterNumber:n,x:t,y:i});this.chapterPixelCoords.sort(function(n,t){return n.chapterNumber-t.chapterNumber})},adjustPositionToChapter:function(n,t){var r,u,i,f;if(this.marker&&this.chapterPixelCoords&&this.chapterPixelCoords.length!=0){for(r=this.x,u=this.y,i=0;i<this.chapterPixelCoords.length;++i)this.chapterPixelCoords[i].chapterNumber<=n&&(r=this.chapterPixelCoords[i].x,u=this.chapterPixelCoords[i].y);f=t.unproject([r,u],t.getMaxZoom());this.marker.setLatLng(f)}},setAddedInChapter:function(n){this.addedInChapter=n},getAddedInChapter:function(){return this.addedInChapter},setDeletedInChapter:function(n){this.deletedInChapter=n},getDeletedInChapter:function(){return this.deletedInChapter},isValidForChapter:function(n){return this.addedInChapter>=0&&n<this.addedInChapter?!1:this.deletedInChapter>=0&&n>=this.deletedInChapter?!1:!0},setOnDragEnd:function(n){this.marker.on("dragend",function(){n()})},copyMarkerLink:function(t){var r=window.location.protocol+"//"+window.location.hostname,u,i,f;window.location.port&&(r+=":"+window.location.port);r+="/Karta?id="+encodeURIComponent(this.mapId)+"&zoomOnMarkerId="+encodeURIComponent(this.id)+"&zoomOnMarkerType="+this.markerType;jQuery("#gn-kartaMarkerLinkContainer").remove();jQuery("body").append("<div id='gn-kartaMarkerLinkContainer' style='opacity: 0'><input id='gn-kartaMarkerLink'/><\/div>");jQuery("#gn-kartaMarkerLink").val(r);u=jQuery("#gn-kartaMarkerLink")[0];u.select();document.execCommand("copy");jQuery("#gn-kartaMarkerLinkContainer").remove();jQuery("#gn-copyToClipboardToolTipContainer").remove();i=jQuery(t).parent();i.append("<div id='gn-kartaCopyToLinkSuccessTooltip' class='gn-copyToClipboardToolTipContainer' style='width: 400px;position: absolute;right: 0px;bottom: 37px'><span class='gn-copyToClipboardToolTipText' style='bottom: 140%'>"+n.Localization.SuccessfullyCopiedToClipboard+"<\/span><\/div>");f=-(jQuery("#gn-kartaCopyToLinkSuccessTooltip").width()-jQuery(".gn-copyToClipboardToolTipText").outerWidth()/2)+(i.width()-jQuery(t).position().left+34);jQuery("#gn-kartaCopyToLinkSuccessTooltip").css("right",f+"px");setTimeout(function(){i.find("#gn-kartaCopyToLinkSuccessTooltip").remove()},1e3)},callEditGeometry:function(){this.editGeometryCallback&&this.editGeometryCallback()},setEditGeometryCallback:function(n){this.editGeometryCallback=n},callEdit:function(){this.editCallback&&this.editCallback()},setEditCallback:function(n){this.editCallback=n},callDelete:function(){this.deleteCallback&&this.deleteCallback()},setDeleteCallback:function(n){this.deleteCallback=n},addTo:function(n){if(this.marker.addTo(n),this.markerGeometry)for(var t=0;t<this.markerGeometry.length;++t)this.markerGeometry[t].addTo(n)},removeFrom:function(n){this.marker.removeFrom(n);for(var t=0;t<this.markerGeometry.length;++t)this.markerGeometry[t].removeFrom(n)},isMarker:function(n){return this.marker!=null&&this.marker==n},getLatLng:function(){return this.marker.getLatLng()},disable:function(){this.marker&&(this.marker.dragging&&this.marker.dragging.disable(),this.marker.getPopup()&&this.marker.getPopup().getElement()&&jQuery(this.marker.getPopup().getElement()).find(".gn-kartaPopupButtons").remove());this.isDisabled=!0},addGeometry:function(n){this.markerGeometry.push(n)},moveGeometry:function(n){for(var r,i,t=0;t<this.markerGeometry.length;++t)this.markerGeometry[t]instanceof L.Rectangle?(i=this.offsetLatLngsCollection(n,this.markerGeometry[t].getLatLngs()),this.markerGeometry[t].setLatLngs(i)):this.markerGeometry[t]instanceof L.Circle?(r=this.markerGeometry[t].getLatLng(),r.lat+=n.lat,r.lng+=n.lng,this.markerGeometry[t].setLatLng(r)):this.markerGeometry[t]instanceof L.Polygon?(i=this.offsetLatLngsCollection(n,this.markerGeometry[t].getLatLngs()),this.markerGeometry[t].setLatLngs(i)):this.markerGeometry[t]instanceof L.Polyline&&(i=this.offsetLatLngs(n,this.markerGeometry[t].getLatLngs()),this.markerGeometry[t].setLatLngs(i)),this.markerGeometry[t].editing&&this.markerGeometry[t].editing.enabled()&&this.markerGeometry[t].editing.updateMarkers()},offsetLatLngsCollection:function(n,t){for(var i=0;i<t.length;++i)t[i]=this.offsetLatLngs(n,t[i]);return t},offsetLatLngs:function(n,t){for(var i=0;i<t.length;++i)t[i].lat+=n.lat,t[i].lng+=n.lng;return t},removeGeometry:function(n,t){for(var i=0;i<this.markerGeometry.length;++i)if(this.markerGeometry[i]==n){this.markerGeometry[i].removeFrom(t);this.markerGeometry.splice(i,1);return}},setGeometryEditMode:function(n,t,i){jQuery.each(this.markerGeometry,function(r,u){if(u.editing)if(u.options.editing||(u.options.editing={}),n){u.editing.enable();u.on("edit",t);u.on("click",function(){i(u)});jQuery(u.getElement()).addClass("gn-kartaGeometryEditable")}else u.editing.disable(),u.off("edit"),u.off("click"),jQuery(u.getElement()).removeClass("gn-kartaGeometryEditable")})},serializeBaseData:function(n){return{id:this.id,x:this.x,y:this.y,addedInChapter:this.addedInChapter,chapterPixelCoords:this.chapterPixelCoords,deletedInChapter:this.deletedInChapter,isImplemented:this.isImplemented,geometry:this.serializeGeometry(n)}},setBaseDataFromSerialized:function(n,t){this.id=n.id;this.x=n.x;this.y=n.y;this.addedInChapter=n.addedInChapter?n.addedInChapter:-1;this.chapterPixelCoords=n.chapterPixelCoords;this.deletedInChapter=n.deletedInChapter?n.deletedInChapter:-1;this.isImplemented=n.isImplemented;this.deserializeGeometry(n.geometry,t)},serializeGeometry:function(n){var e=[],t,s,h,i,c,l;if(!this.markerGeometry)return e;for(t=0;t<this.markerGeometry.length;++t){var u=this.markerGeometry[t].toGeoJSON().geometry.type,f=null,o=null;this.markerGeometry[t]instanceof L.Rectangle?(s=this.markerGeometry[t].getBounds(),f=[s.getNorthEast(),s.getSouthWest()],u="Rectangle"):this.markerGeometry[t]instanceof L.Circle?(h=this.markerGeometry[t].getLatLng(),o=this.markerGeometry[t].getRadius(),f=[h],u="Circle"):f=u=="Polygon"?this.markerGeometry[t].getLatLngs()[0]:this.markerGeometry[t].getLatLngs();i=this.projectGeometryPositions(t*r,f,n);o!=null&&(c={id:i[0].id+1,x:i[0].x+o,y:i[0].y},i.push(c));l={id:this.markerGeometry[t].id,geoType:u,positions:i,color:this.markerGeometry[t].options.color};e.push(l)}return e},projectGeometryPositions:function(n,t,i){for(var u,f=n,e=[],r=0;r<t.length;++r)u=i.project(t[r],i.getMaxZoom()),u.id=f,e.push(u),++f;return e},deserializeGeometry:function(n,i){var r,u,f;if(this.markerGeometry=[],n)for(r=0;r<n.length;++r)u=null,n[r].geoType==t.polygon?u=new L.Polygon(this.unprojectGeometryPositions(n[r].positions,i)):n[r].geoType==t.circle?(f=n[r].positions[1].x-n[r].positions[0].x,u=new L.Circle(this.unprojectGeometryPositions([n[r].positions[0]],i)[0],{radius:f})):n[r].geoType==t.lineString?u=new L.Polyline(this.unprojectGeometryPositions(n[r].positions,i)):n[r].geoType==t.rectangle&&(u=new L.Rectangle(this.unprojectGeometryPositions(n[r].positions,i))),u&&(u.id=n[r].id,u.setStyle({fillColor:n[r].color,color:n[r].color,cursor:"default"}),this.markerGeometry.push(u))},unprojectGeometryPositions:function(n,t){for(var u,r=[],i=0;i<n.length;++i)u=t.unproject([n[i].x,n[i].y],t.getMaxZoom()),r.push(u);return r}}})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(n){n.KirjaMarker=function(t,i,r){n.BaseMarker.apply(this);this.pageId=t;this.pageName=i;this.isTrackingImplementationStatus=!1;this.serializePropertyName="KirjaMarker";this.initMarker(r)};n.KirjaMarker.prototype=jQuery.extend({},n.BaseMarker.prototype);n.KirjaMarker.prototype.getIconUrl=function(){return"/img/karta/kirjaMarker.png"};n.KirjaMarker.prototype.getIconRetinaUrl=function(){return"/img/karta/kirjaMarker_2x.png"};n.KirjaMarker.prototype.getIconLabel=function(){return this.pageName};n.KirjaMarker.prototype.loadContent=function(){var n=new jQuery.Deferred,t=this;return jQuery.ajax({url:"/api/KirjaApi/Page?id="+this.pageId}).done(function(i){var r="<h4><a href='/Kirja?id="+t.pageId+"' target='_blank'>"+i.name+"<\/a><\/h4>";r+="<div class='gn-kartaPopupContent'>"+i.content+"<\/div>";n.resolve(r)}).fail(function(){n.reject()}),n.promise()};n.KirjaMarker.prototype.serialize=function(n){var t=this.serializeBaseData(n);return t.pageId=this.pageId,t.pageName=this.pageName,t}})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(n){n.KortistoMarker=function(t,i,r){n.BaseMarker.apply(this);this.npcId=t;this.npcName=i;this.isTrackingImplementationStatus=!0;this.serializePropertyName="NpcMarker";this.initMarker(r)};n.KortistoMarker.prototype=jQuery.extend({},n.BaseMarker.prototype);n.KortistoMarker.prototype.getIconUrl=function(){return"/img/karta/kortistoMarker.png"};n.KortistoMarker.prototype.getIconRetinaUrl=function(){return"/img/karta/kortistoMarker_2x.png"};n.KortistoMarker.prototype.getIconLabel=function(){return this.npcName};n.KortistoMarker.prototype.loadContent=function(){var n=new jQuery.Deferred,t=this;return jQuery.ajax({url:"/api/KortistoApi/FlexFieldObject?id="+this.npcId}).done(function(i){var r="<h4><a href='/Kortisto/Npc?id="+t.npcId+"' target='_blank'>"+i.name+"<\/a><\/h4>";i.imageFile&&(r+="<div class='gn-kartaPopupImageContainer'><img class='gn-kartaPopupImage' src='/api/KortistoApi/FlexFieldObjectImage?imageFile="+encodeURIComponent(i.imageFile)+"'/><\/div>");n.resolve(r)}).fail(function(){n.reject()}),n.promise()};n.KortistoMarker.prototype.serialize=function(n){var t=this.serializeBaseData(n);return t.npcId=this.npcId,t.npcName=this.npcName,t}})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(n){n.KartaMarker=function(t,i,r){n.BaseMarker.apply(this);this.mapChangeId=t;this.mapName=i;this.isTrackingImplementationStatus=!0;this.serializePropertyName="MapChangeMarker";this.initMarker(r)};n.KartaMarker.prototype=jQuery.extend({},n.BaseMarker.prototype);n.KartaMarker.prototype.getIconUrl=function(){return"/img/karta/kartaMarker.png"};n.KartaMarker.prototype.getIconRetinaUrl=function(){return"/img/karta/kartaMarker_2x.png"};n.KartaMarker.prototype.getIconLabel=function(){return this.mapName};n.KartaMarker.prototype.loadContent=function(){var n=new jQuery.Deferred,t=this;return jQuery.ajax({url:"/api/KartaApi/Map?id="+this.mapChangeId}).done(function(i){var r="<h4><a class='gn-clickable' onclick='GoNorth.Karta.Map.switchToMap(\""+t.mapChangeId+"\")'>"+i.name+"<\/a><\/h4>";n.resolve(r)}).fail(function(){n.reject()}),n.promise()};n.KartaMarker.prototype.serialize=function(n){var t=this.serializeBaseData(n);return t.mapId=this.mapChangeId,t.mapName=this.mapName,t}})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(n){n.StyrMarker=function(t,i,r){n.BaseMarker.apply(this);this.itemId=t;this.itemName=i;this.isTrackingImplementationStatus=!0;this.serializePropertyName="ItemMarker";this.initMarker(r)};n.StyrMarker.prototype=jQuery.extend({},n.BaseMarker.prototype);n.StyrMarker.prototype.getIconUrl=function(){return"/img/karta/styrMarker.png"};n.StyrMarker.prototype.getIconRetinaUrl=function(){return"/img/karta/styrMarker_2x.png"};n.StyrMarker.prototype.getIconLabel=function(){return this.itemName};n.StyrMarker.prototype.loadContent=function(){var n=new jQuery.Deferred,t=this;return jQuery.ajax({url:"/api/StyrApi/FlexFieldObject?id="+this.itemId}).done(function(i){var r="<h4><a href='/Styr/Item?id="+t.itemId+"' target='_blank'>"+i.name+"<\/a><\/h4>";i.imageFile&&(r+="<div class='gn-kartaPopupImageContainer'><img class='gn-kartaPopupImage' src='/api/StyrApi/FlexFieldObjectImage?imageFile="+encodeURIComponent(i.imageFile)+"'/><\/div>");n.resolve(r)}).fail(function(){n.reject()}),n.promise()};n.StyrMarker.prototype.serialize=function(n){var t=this.serializeBaseData(n);return t.itemId=this.itemId,t.itemName=this.itemName,t}})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(n){n.AikaMarker=function(t,i,r){n.BaseMarker.apply(this);this.questId=t;this.name=i;this.isTrackingImplementationStatus=!0;this.serializePropertyName="QuestMarker";this.initMarker(r)};n.AikaMarker.prototype=jQuery.extend({},n.BaseMarker.prototype);n.AikaMarker.prototype.getIconUrl=function(){return"/img/karta/aikaMarker.png"};n.AikaMarker.prototype.getIconRetinaUrl=function(){return"/img/karta/aikaMarker_2x.png"};n.AikaMarker.prototype.getIconLabel=function(){return this.name};n.AikaMarker.prototype.loadContent=function(){var n=new jQuery.Deferred,t=this;return jQuery.ajax({url:"/api/AikaApi/GetQuest?id="+this.questId}).done(function(i){var r="<h4><a href='/Aika/Quest?id="+t.questId+"' target='_blank'>"+i.name+"<\/a><\/h4>";r+="<div class='gn-kartaPopupContent'>"+jQuery("<div><\/div>").text(t.name).html()+"<\/div>";n.resolve(r)}).fail(function(){n.reject()}),n.promise()};n.AikaMarker.prototype.serialize=function(){var n=this.serializeBaseData();return n.questId=this.questId,n.name=this.name,n}})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(n){n.NoteMarker=function(t,i,r){n.BaseMarker.apply(this);this.name=t;this.description=i;this.isTrackingImplementationStatus=!0;this.serializePropertyName="NoteMarker";this.initMarker(r)};n.NoteMarker.prototype=jQuery.extend({},n.BaseMarker.prototype);n.NoteMarker.prototype.getIconUrl=function(){return"/img/karta/noteMarker.png"};n.NoteMarker.prototype.getIconRetinaUrl=function(){return"/img/karta/noteMarker_2x.png"};n.NoteMarker.prototype.getIconLabel=function(){return this.name};n.NoteMarker.prototype.loadContent=function(){var n=new jQuery.Deferred,t=this;return setTimeout(function(){var i="<h4 class='gn-kartaNoteMarkerTitle'>"+jQuery("<div><\/div>").text(t.name).html()+"<\/h4>";i+="<div class='gn-kartaPopupContent'>"+jQuery("<div><\/div>").text(t.description).html()+"<\/div>";n.resolve(i)},1),n.promise()};n.NoteMarker.prototype.serialize=function(n){var t=this.serializeBaseData(n);return t.name=this.name,t.description=this.description,t}})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(n){(function(n){var t=0,i=1;n.MarkerManager=function(n){this.viewModel=n;this.markerSelectionMode=t;this.preSelectType=null;this.markerType=null;this.isExpanded=new ko.observable(!1);this.isLoading=new ko.observable(!1);this.errorOccured=new ko.observable(!1);this.loadedEntries=new ko.observableArray;this.searchTerm=new ko.observable("");this.currentPage=new ko.observable(0);this.hasMore=new ko.observable(!1);this.additionalButtons=new ko.observableArray;this.markerChildShowId=new ko.observable("");this.hideSearchBar=!1;this.hidePaging=!1;this.markers=[];this.unparsedMarkers=[];this.markerLayer=null;this.markerMap=null;this.isLayerVisible=new ko.observable(!0);var i=this;this.isLayerVisible.subscribe(function(){i.syncLayerVisibility()})};n.MarkerManager.prototype={createLayerForMap:function(n){this.markerMap=n;this.markerLayer=L.layerGroup();this.isLayerVisible()&&this.markerLayer.addTo(n)},syncLayerVisibility:function(){this.markerLayer&&this.markerMap&&(this.isLayerVisible()?this.markerLayer.addTo(this.markerMap):(this.markerLayer.removeFrom(this.markerMap),this.isNotSelected()||this.viewModel.resetMarkerObjectData()))},checkPreSelection:function(n,t){var r=new jQuery.Deferred,i;return!this.preSelectType||this.preSelectType!=n?(r.reject(),r.promise()):(this.isExpanded(!0),this.isLoading(!0),this.errorOccured(!1),i=this,this.loadPreSelectionObject(n,t).done(function(n){i.searchTerm(n.name);i.loadedEntries([n]);i.hasMore(!1);i.isLoading(!1);i.isNotSelected()||i.viewModel.resetMarkerObjectData();i.selectEntry(n);r.resolve()}).fail(function(){i.errorOccured(!0);i.isLoading(!1);r.reject()}),r.promise())},loadPreSelectionObject:function(){var n=new jQuery.Deferred;return n.reject("Not implemented"),n.promise()},checkZoomOnMarker:function(n,t){var i,r;if(this.markerType&&this.markerType==n)for(i=0;i<this.markers.length;++i)if(this.markers[i].id==t){r=this;this.checkZoomOnMarkerPreSelectionRequirements(this.markers[i]).done(function(){r.viewModel.switchChapterByNumber(r.markers[i].getAddedInChapter());r.markers[i].zoomOn(r.markerMap)});return}},checkZoomOnMarkerPreSelectionRequirements:function(){var n=new jQuery.Deferred;return n.resolve(),n.promise()},toogleVisibility:function(){this.isExpanded(!this.isExpanded());this.loadedEntries().length===0&&(this.currentPage(0),this.loadEntries())},startNewSearch:function(){this.currentPage(0);this.loadEntries()},prevPage:function(){this.currentPage(this.currentPage()-1);this.loadEntries()},nextPage:function(){this.currentPage(this.currentPage()+1);this.loadEntries()},loadEntries:function(){this.onEntrySelected(null);this.isLoading(!0);this.errorOccured(!1);var n=this;this.sendEntriesRequest().done(function(t){n.loadedEntries(t.entries);n.hasMore(t.hasMore);n.isLoading(!1);n.isNotSelected()||n.viewModel.resetMarkerObjectData()}).fail(function(){n.errorOccured(!0);n.isLoading(!1)})},findEntryById:function(n){for(var i=this.loadedEntries(),t=0;t<i.length;++t)if(i[t].id==n)return i[t];return null},resetSelectionData:function(){this.markerSelectionMode=t},onEntrySelected:function(){},deselectCurrentEntry:function(){this.onEntrySelected(null);this.resetSelectionData();this.viewModel.setCurrentObjectId(null,null)},selectEntry:function(n){if(!this.viewModel.isReadonly()){if(this.viewModel.selectedMarkerObjectId()==n.id){this.deselectCurrentEntry();return}this.onEntrySelected(n);this.viewModel.setCurrentObjectId(n.id,this);this.markerSelectionMode=i;this.isLayerVisible()||this.isLayerVisible(!0)}},isNotSelected:function(){return this.markerSelectionMode==t},isDefaultSelected:function(){return this.markerSelectionMode==i},resetMarkers:function(){this.markers=[];this.unparsedMarkers=[]},setUnparsedMarkers:function(n){this.unparsedMarkers=n},parseUnparsedMarkers:function(n){this.parseMarkers(this.unparsedMarkers,n)},getLatLngFromSerializedMarker:function(n,t){return t.unproject([n.x,n.y],t.getMaxZoom())},parseMarkers:function(n,t){var i,u,r;for(n||(n=[]),this.markers=[],i=0;i<n.length;++i)u=this.getLatLngFromSerializedMarker(n[i],t),r=this.parseMarker(n[i],u),this.viewModel.setMarkerDragCallback(r),r.setBaseDataFromSerialized(n[i],t),this.pushMarker(r)},removeMarker:function(n){for(var t=0;t<this.markers.length;++t)if(this.markers[t]==n){this.markers.splice(t,1);return}},adjustMarkersToChapter:function(n,t){for(var i=0;i<this.markers.length;++i)(this.markers[i].adjustPositionToChapter(n,t),this.canPushMarkerToMap(this.markers[i]))&&(this.markers[i].isValidForChapter(n)?this.markers[i].addTo(this.markerLayer):this.markers[i].removeFrom(this.markerLayer))},setEditGeometryCallback:function(n){var t=this;n.setEditGeometryCallback(function(){t.viewModel.enterGeometryEditMode(n,t)})},setEditCallback:function(){},setDeleteCallback:function(n){var t=this;n.setDeleteCallback(function(){t.viewModel.openDeleteDialog(n,t)})},canPushMarkerToMap:function(){return!0},pushMarker:function(n){this.setEditGeometryCallback(n);this.setEditCallback(n);this.setDeleteCallback(n);n.setMapId(this.viewModel.id());n.setMarkerType(this.markerType);n.setCompareDialog(this.viewModel.compareDialog);this.markers.push(n);var t=this.viewModel.getSelectedChapterNumber();(t==-1||n.isValidForChapter(t))&&this.canPushMarkerToMap(n)&&n.addTo(this.markerLayer)},addGeometryToLayer:function(n){this.markerLayer&&this.markerLayer.addLayer(n)},disable:function(){for(var n=0;n<this.markers.length;++n)this.markers[n].disable()},sendEntriesRequest:function(){var n=new jQuery.Deferred;return n.reject(),n.promise()},createMarker:function(){},parseMarker:function(){return{}}}})(n.Map=n.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(t){(function(t){var r=20,u="NewKirjaPage",i=2;t.KirjaMarkerManager=function(i){t.MarkerManager.apply(this,[i]);this.title=n.Karta.Map.Localization.KirjaMarkerTitle;this.markerType="KirjaPage";this.additionalButtons.push({buttonId:u,title:n.Karta.Map.Localization.KirjaMarkerNewPage,callback:this.createNewKirjaMarker})};t.KirjaMarkerManager.prototype=jQuery.extend({},t.MarkerManager.prototype);t.KirjaMarkerManager.prototype.sendEntriesRequest=function(){var n=new jQuery.Deferred;return jQuery.ajax({url:"/api/KirjaApi/SearchPages?searchPattern="+this.searchTerm()+"&start="+this.currentPage()*r+"&pageSize="+r,type:"GET"}).done(function(t){n.resolve({entries:t.pages,hasMore:t.hasMore})}).fail(function(){n.reject()}),n.promise()};t.KirjaMarkerManager.prototype.createMarker=function(n,t){var r=new jQuery.Deferred;return this.isDefaultSelected()?this.createMarkerFromExistingPage(r,n,t):this.markerSelectionMode==i?this.createMarkerFromNewPage(r,t):r.reject(),r.promise()};t.KirjaMarkerManager.prototype.createMarkerFromExistingPage=function(n,i,r){var f="",e=this.findEntryById(i),u;e&&(f=e.name);u=new t.KirjaMarker(i,f,r);this.pushMarker(u);n.resolve(u)};t.KirjaMarkerManager.prototype.createMarkerFromNewPage=function(n,i){this.viewModel.showWaitOnPageDialog(!0);var r=this,u=window.open("/Kirja?newPage=1");u.onbeforeunload=function(){r.viewModel.showWaitOnPageDialog(!1)};u.newKirjaPageSaved=function(u,f){var e=new t.KirjaMarker(u,f,i);r.pushMarker(e);r.viewModel.showWaitOnPageDialog(!1);n.resolve(e)}};t.KirjaMarkerManager.prototype.createNewKirjaMarker=function(){if(this.markerSelectionMode==i){this.deselectCurrentEntry();return}this.viewModel.setCurrentObjectId(u,this);this.markerSelectionMode=i};t.KirjaMarkerManager.prototype.parseMarker=function(n,i){return new t.KirjaMarker(n.pageId,n.pageName,i)}})(t.Map=t.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(t){(function(t){var i=20;t.KortistoMarkerManager=function(i){t.MarkerManager.apply(this,[i]);this.title=n.Karta.Map.Localization.KortistoMarkerTitle;this.markerType="Npc"};t.KortistoMarkerManager.prototype=jQuery.extend({},t.MarkerManager.prototype);t.KortistoMarkerManager.prototype.sendEntriesRequest=function(){var n=new jQuery.Deferred;return jQuery.ajax({url:"/api/KortistoApi/SearchFlexFieldObjects?searchPattern="+this.searchTerm()+"&start="+this.currentPage()*i+"&pageSize="+i,type:"GET"}).done(function(t){n.resolve({entries:t.flexFieldObjects,hasMore:t.hasMore})}).fail(function(){n.reject()}),n.promise()};t.KortistoMarkerManager.prototype.createMarker=function(n,i){var u=new jQuery.Deferred,f="",e=this.findEntryById(n),r;return e&&(f=e.name),r=new t.KortistoMarker(n,f,i),this.pushMarker(r),u.resolve(r),u.promise()};t.KortistoMarkerManager.prototype.parseMarker=function(n,i){return new t.KortistoMarker(n.npcId,n.npcName,i)}})(t.Map=t.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(t){(function(t){var i=20;t.StyrMarkerManager=function(i){t.MarkerManager.apply(this,[i]);this.title=n.Karta.Map.Localization.StyrMarkerTitle;this.markerType="Item"};t.StyrMarkerManager.prototype=jQuery.extend({},t.MarkerManager.prototype);t.StyrMarkerManager.prototype.sendEntriesRequest=function(){var n=new jQuery.Deferred;return jQuery.ajax({url:"/api/StyrApi/SearchFlexFieldObjects?searchPattern="+this.searchTerm()+"&start="+this.currentPage()*i+"&pageSize="+i,type:"GET"}).done(function(t){n.resolve({entries:t.flexFieldObjects,hasMore:t.hasMore})}).fail(function(){n.reject()}),n.promise()};t.StyrMarkerManager.prototype.createMarker=function(n,i){var u=new jQuery.Deferred,f="",e=this.findEntryById(n),r;return e&&(f=e.name),r=new t.StyrMarker(n,f,i),this.pushMarker(r),u.resolve(r),u.promise()};t.StyrMarkerManager.prototype.parseMarker=function(n,i){return new t.StyrMarker(n.itemId,n.itemName,i)}})(t.Map=t.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(t){(function(t){var i=20;t.AikaMarkerManager=function(i){t.MarkerManager.apply(this,[i]);this.title=n.Karta.Map.Localization.AikaMarkerTitle;this.preSelectType="Quest";this.markerType="Quest"};t.AikaMarkerManager.prototype=jQuery.extend({},t.MarkerManager.prototype);t.AikaMarkerManager.prototype.sendEntriesRequest=function(){var n=new jQuery.Deferred;return jQuery.ajax({url:"/api/AikaApi/GetQuests?searchPattern="+this.searchTerm()+"&start="+this.currentPage()*i+"&pageSize="+i,type:"GET"}).done(function(t){n.resolve({entries:t.quests,hasMore:t.hasMore})}).fail(function(){n.reject()}),n.promise()};t.AikaMarkerManager.prototype.loadPreSelectionObject=function(n,t){var i=new jQuery.Deferred;return jQuery.ajax({url:"/api/AikaApi/GetQuest?id="+t,type:"GET"}).done(function(n){i.resolve(n)}).fail(function(){i.reject()}),i.promise()};t.AikaMarkerManager.prototype.checkZoomOnMarkerPreSelectionRequirements=function(n){return this.checkPreSelection(this.preSelectType,n.questId)};t.AikaMarkerManager.prototype.onEntrySelected=function(n){n&&(this.viewModel.selectedMarkerObjectId()!=n.id||this.markerChildShowId()!=n.id)?this.markerChildShowId(n.id):this.markerChildShowId("");this.syncVisibleMarkers()};t.AikaMarkerManager.prototype.syncVisibleMarkers=function(){var t,n;if(this.markerLayer)for(t=this.viewModel.getSelectedChapterNumber(),n=0;n<this.markers.length;++n)this.markers[n].questId!=this.markerChildShowId()?this.markers[n].removeFrom(this.markerLayer):this.markers[n].isValidForChapter(t)&&this.markers[n].addTo(this.markerLayer)};t.AikaMarkerManager.prototype.canPushMarkerToMap=function(n){return n.questId==this.markerChildShowId()};t.AikaMarkerManager.prototype.createMarker=function(n,i){var u=new jQuery.Deferred,r=this;return this.viewModel.openMarkerNameDialog().then(function(f){r.markerChildShowId(n);r.syncVisibleMarkers();var e=new t.AikaMarker(n,f,i);r.pushMarker(e);u.resolve(e)}),u.promise()};t.AikaMarkerManager.prototype.setEditCallback=function(n){var t=this;n.setEditCallback(function(){t.viewModel.openMarkerNameDialog(n.name).then(function(i){n.name!=i&&(n.name=i,n.marker.getPopup()&&jQuery(n.marker.getPopup().getElement()).find(".gn-kartaPopupContent").text(i),n.marker.getElement()&&jQuery(n.marker.getElement()).find(".gn-kartaIconLabel").text(i),t.viewModel.saveMarker(n))})})};t.AikaMarkerManager.prototype.parseMarker=function(n,i){return new t.AikaMarker(n.questId,n.name,i)}})(t.Map=t.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(t){(function(t){t.KartaMarkerManager=function(i){t.MarkerManager.apply(this,[i]);this.title=n.Karta.Map.Localization.KartaMarkerTitle;this.markerType="MapChange";this.hideSearchBar=!0;this.hidePaging=!0;this.allMaps=[];var r=this;this.viewModel.id.subscribe(function(){r.loadedEntries(r.getFilteredMaps());r.isNotSelected()||r.viewModel.resetMarkerObjectData()})};t.KartaMarkerManager.prototype=jQuery.extend({},t.MarkerManager.prototype);t.KartaMarkerManager.prototype.sendEntriesRequest=function(){var n=new jQuery.Deferred,t;return this.allMaps.length>0?(n.resolve({entries:this.getFilteredMaps(),hasMore:!1}),n.promise()):(t=this,jQuery.ajax({url:"/api/KartaApi/Maps",type:"GET"}).done(function(i){t.allMaps=i;n.resolve({entries:t.getFilteredMaps(),hasMore:!1})}).fail(function(){n.reject()}),n.promise())};t.KartaMarkerManager.prototype.getFilteredMaps=function(){for(var t=[],n=0;n<this.allMaps.length;++n)this.allMaps[n].id!=this.viewModel.id()&&t.push(this.allMaps[n]);return t};t.KartaMarkerManager.prototype.createMarker=function(n,i){var u=new jQuery.Deferred,f="",e=this.findEntryById(n),r;return e&&(f=e.name),r=new t.KartaMarker(n,f,i),this.pushMarker(r),u.resolve(r),u.promise()};t.KartaMarkerManager.prototype.parseMarker=function(n,i){return new t.KartaMarker(n.mapId,n.mapName,i)}})(t.Map=t.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(t){(function(t){var i="NewNote";t.NoteMarkerManager=function(r){t.MarkerManager.apply(this,[r]);this.title=n.Karta.Map.Localization.NoteMarkerTitle;this.markerType="Note";this.hideSearchBar=!0;this.hidePaging=!0;this.additionalButtons.push({buttonId:i,title:n.Karta.Map.Localization.NoteMarkerNewNote,callback:this.createNewNoteMarker})};t.NoteMarkerManager.prototype=jQuery.extend({},t.MarkerManager.prototype);t.NoteMarkerManager.prototype.sendEntriesRequest=function(){var n=new jQuery.Deferred;return n.resolve({entries:[],hasMore:!1}),n.promise()};t.NoteMarkerManager.prototype.createNewNoteMarker=function(){if(this.viewModel.selectedMarkerObjectId()==i){this.deselectCurrentEntry();return}this.viewModel.setCurrentObjectId(i,this)};t.NoteMarkerManager.prototype.createMarker=function(n,i){var r=new jQuery.Deferred,u=this;return this.viewModel.openMarkerNameDialog("",!0).then(function(n,f){var e=new t.NoteMarker(n,f,i);u.pushMarker(e);r.resolve(e)}),r.promise()};t.NoteMarkerManager.prototype.setEditCallback=function(n){var t=this;n.setEditCallback(function(){t.viewModel.openMarkerNameDialog(n.name,!0,n.description).then(function(i,r){(n.name!=i||n.description!=r)&&(n.name=i,n.description=r,n.marker.getPopup()&&(jQuery(n.marker.getPopup().getElement()).find(".gn-kartaNoteMarkerTitle").text(i),jQuery(n.marker.getPopup().getElement()).find(".gn-kartaPopupContent").text(r)),n.marker.getElement()&&jQuery(n.marker.getElement()).find(".gn-kartaIconLabel").text(i),t.viewModel.saveMarker(n))})})};t.NoteMarkerManager.prototype.parseMarker=function(n,i){return new t.NoteMarker(n.name,n.description,i)}})(t.Map=t.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{}),function(n){"use strict";(function(t){(function(i){var r="#0000CC";i.ViewModel=function(){var e,f,u,o;this.id=new ko.observable("");this.preSelectType=n.Util.getParameterFromUrl("preSelectType");this.preSelectId=n.Util.getParameterFromUrl("preSelectId");this.zoomOnMarkerType=n.Util.getParameterFromUrl("zoomOnMarkerType");this.zoomOnMarkerId=n.Util.getParameterFromUrl("zoomOnMarkerId");this.preSelectChapter=parseInt(n.Util.getParameterFromUrl("chapter"));e=n.Util.getParameterFromUrl("id");e&&this.setId(e);this.isLoading=new ko.observable(!1);this.isReadonly=new ko.observable(!1);this.showWaitOnPageDialog=new ko.observable(!1);this.lockedByUser=new ko.observable("");this.map=null;this.mapGeometryToolbar=null;this.currentMapName=new ko.observable(t.Map.Localization.Karta);this.mapUrlTemplate=new ko.computed(function(){return"/api/KartaApi/MapImage?mapId="+encodeURIComponent(this.id())+"&z={z}&x={x}&y={y}&maxZoom={maxZoom}&maxTileCountX={maxTileCountX}&maxTileCountY={maxTileCountY}"},this);this.mapMaxZoom=new ko.observable;this.mapImageWidth=new ko.observable;this.mapImageHeight=new ko.observable;this.mapLoaded=new ko.observable(!1);this.allMaps=new ko.observableArray;this.kirjaMarkerManager=new i.KirjaMarkerManager(this);this.kortistoMarkerManager=new i.KortistoMarkerManager(this);this.styrMarkerManager=new i.StyrMarkerManager(this);this.kartaMarkerManager=new i.KartaMarkerManager(this);this.aikaMarkerManager=new i.AikaMarkerManager(this);this.noteMarkerManager=new i.NoteMarkerManager(this);this.showMarkerLabels=new ko.observable(!0);this.selectedMarkerObjectId=new ko.observable("");this.currentValidManager=null;this.showConfirmDeleteDialog=new ko.observable(!1);this.markerToDelete=null;this.markerToDeleteManager=null;this.showMarkerNameDialog=new ko.observable(!1);this.dialogMarkerName=new ko.observable("");this.showMarkerNameDialogDescription=new ko.observable(!1);this.dialogMarkerDescription=new ko.observable("");this.dialogMarkerNameDef=null;this.compareDialog=new n.ImplementationStatus.CompareDialog.ViewModel;this.isInGeometryEditMode=new ko.observable(!1);this.geometryEditMarker=null;this.geometryEditMarkerManager=null;this.showGeometrySettingDialog=new ko.observable(!1);this.showConfirmGeometryDeleteDialog=new ko.observable(!1);this.availableGeometryColors=[{name:n.Karta.Map.Localization.GeometryColorBlue,color:r},{name:n.Karta.Map.Localization.GeometryColorRed,color:"#CC0000"},{name:n.Karta.Map.Localization.GeometryColorGreen,color:"#008800"},{name:n.Karta.Map.Localization.GeometryColorPurple,color:"#66008e"},{name:n.Karta.Map.Localization.GeometryColorWhite,color:"#FFFFFF"},{name:n.Karta.Map.Localization.GeometryColorYellow,color:"#FDFF00"}];this.selectedGeometryColor=new ko.observable("");this.editGeometry=null;this.selectedChapter=new ko.observable(null);this.chapters=new ko.observableArray;this.selectedChapterName=new ko.computed(function(){var n=this.selectedChapter();return n?n.number+": "+n.name:i.Localization.EditingDefaultChapter},this);this.isNonDefaultChapterSelected=new ko.computed(function(){var n=this.selectedChapter();return n?!n.isDefault:!1},this);this.errorOccured=new ko.observable(!1);this.loadAllMaps();f=null;i.hasAikaRights?f=this.loadChapters():(f=new jQuery.Deferred,f.resolve());u=this;f.done(function(){u.id()&&u.loadMap(u.id())});o=this.id();n.Util.onUrlParameterChanged(function(){var i=n.Util.getParameterFromUrl("id"),t;i!=o&&(t=parseInt(n.Util.getParameterFromUrl("chapter")),isNaN(t)?u.chapters().length>0&&u.switchChapter(u.chapters()[0],!0):u.switchChapterByNumber(t,!0),n.Karta.Map.readUrlMapLocations(),o=i,u.switchMap(n.Util.getParameterFromUrl("id"),!0))});n.Karta.Map.switchToMap=function(n){u.id()!=n&&u.switchMap(n)}};i.ViewModel.prototype={checkPreSelection:function(){this.preSelectType&&this.preSelectId&&(this.kirjaMarkerManager.checkPreSelection(this.preSelectType,this.preSelectId),this.kortistoMarkerManager.checkPreSelection(this.preSelectType,this.preSelectId),this.styrMarkerManager.checkPreSelection(this.preSelectType,this.preSelectId),this.kartaMarkerManager.checkPreSelection(this.preSelectType,this.preSelectId),this.aikaMarkerManager.checkPreSelection(this.preSelectType,this.preSelectId),this.noteMarkerManager.checkPreSelection(this.preSelectType,this.preSelectId),this.preSelectType=null,this.preSelectId=null)},checkZoomOnMarker:function(){this.zoomOnMarkerType&&this.zoomOnMarkerId&&(this.kirjaMarkerManager.checkZoomOnMarker(this.zoomOnMarkerType,this.zoomOnMarkerId),this.kortistoMarkerManager.checkZoomOnMarker(this.zoomOnMarkerType,this.zoomOnMarkerId),this.styrMarkerManager.checkZoomOnMarker(this.zoomOnMarkerType,this.zoomOnMarkerId),this.kartaMarkerManager.checkZoomOnMarker(this.zoomOnMarkerType,this.zoomOnMarkerId),this.aikaMarkerManager.checkZoomOnMarker(this.zoomOnMarkerType,this.zoomOnMarkerId),this.noteMarkerManager.checkZoomOnMarker(this.zoomOnMarkerType,this.zoomOnMarkerId),this.zoomOnMarkerType=null,this.zoomOnMarkerId=null)},mapReady:function(t){this.map=t;this.kirjaMarkerManager.createLayerForMap(t);this.kortistoMarkerManager.createLayerForMap(t);this.styrMarkerManager.createLayerForMap(t);this.kartaMarkerManager.createLayerForMap(t);this.aikaMarkerManager.createLayerForMap(t);this.noteMarkerManager.createLayerForMap(t);this.kirjaMarkerManager.parseUnparsedMarkers(t);this.kortistoMarkerManager.parseUnparsedMarkers(t);this.styrMarkerManager.parseUnparsedMarkers(t);this.kartaMarkerManager.parseUnparsedMarkers(t);this.aikaMarkerManager.parseUnparsedMarkers(t);this.noteMarkerManager.parseUnparsedMarkers(t);this.checkPreSelection();this.checkZoomOnMarker();this.initEditGeometryToolbar(t);n.Util.getParameterFromUrl("mapLat")||this.refreshUrlMapLocations()},refreshUrlMapLocations:function(){n.Karta.Map.refreshUrlMapLocations&&n.Karta.Map.refreshUrlMapLocations()},loadAllMaps:function(){this.errorOccured(!1);var n=this;jQuery.ajax({url:"/api/KartaApi/Maps",method:"GET"}).done(function(t){n.allMaps(t);!n.id()&&t.length>0&&n.loadMap(t[0].id)}).fail(function(){n.errorOccured(!0)})},loadChapters:function(){var t=new jQuery.Deferred,n;return this.errorOccured(!1),n=this,jQuery.ajax({url:"/api/AikaApi/GetChapters",method:"GET"}).done(function(i){var o,r;i||(i=[]);var u=[],f="",e=-1;for(r=0;r<i.length;++r)r==0&&(e=i[r].number),i[r].number!=e&&(u.push({number:e,name:f}),f="",e=i[r].number),f&&(f+=" / "),f+=i[r].name;if(f&&u.push({number:e,name:f}),u.length>0){if(u[0].isDefault=!0,o=u[0],n.preSelectChapter!=null&&!isNaN(n.preSelectChapter))for(r=0;r<u.length;++r)if(u[r].number==n.preSelectChapter){o=u[r];break}n.preSelectChapter=null;n.switchChapter(o,!0)}n.chapters(u);t.resolve()}).fail(function(){n.errorOccured(!0);t.reject()}),t.promise()},switchChapterByNumber:function(n,t){var i=this.chapters(),u,r;if(i!=null&&i.length!=0&&this.getSelectedChapterNumber()!=n){for(u=i[0],r=0;r<i.length;++r)if(i[r].number>=n){u=i[r];break}u!=this.selectedChapter()&&this.switchChapter(u,t)}},switchChapter:function(t,i){if(this.selectedChapter(t),this.kirjaMarkerManager.adjustMarkersToChapter(t.number,this.map),this.kortistoMarkerManager.adjustMarkersToChapter(t.number,this.map),this.styrMarkerManager.adjustMarkersToChapter(t.number,this.map),this.kartaMarkerManager.adjustMarkersToChapter(t.number,this.map),this.aikaMarkerManager.adjustMarkersToChapter(t.number,this.map),this.noteMarkerManager.adjustMarkersToChapter(t.number,this.map),!i){var r=this.buildUrlParameters();n.Util.replaceUrlParameters(r);this.refreshUrlMapLocations()}},getSelectedChapterNumber:function(){return this.selectedChapter()?this.selectedChapter().number:-1},setId:function(t,i){var u=!!this.id()&&this.id()!=t,r;(this.id(t),i)||(r=this.buildUrlParameters(),u?n.Util.setUrlParameters(r):n.Util.replaceUrlParameters(r))},buildUrlParameters:function(){var n="id="+this.id();return this.isNonDefaultChapterSelected&&this.isNonDefaultChapterSelected()&&this.selectedChapter()&&(n+="&chapter="+this.selectedChapter().number),n},switchMap:function(n,t){this.id()!=n&&(this.kirjaMarkerManager.resetMarkers(),this.kortistoMarkerManager.resetMarkers(),this.styrMarkerManager.resetMarkers(),this.kartaMarkerManager.resetMarkers(),this.aikaMarkerManager.resetMarkers(),this.noteMarkerManager.resetMarkers(),this.loadMap(n,t))},loadMap:function(n,t){this.errorOccured(!1);this.isLoading(!0);var i=this;jQuery.ajax({url:"/api/KartaApi/Map?id="+encodeURIComponent(n),method:"GET"}).done(function(r){if(i.currentMapName(r.name),i.mapMaxZoom(r.maxZoom),i.mapImageWidth(r.width),i.mapImageHeight(r.height),i.setId(n,t),i.map?(i.kirjaMarkerManager.parseMarkers(r.kirjaPageMarker,i.map),i.kortistoMarkerManager.parseMarkers(r.npcMarker,i.map),i.styrMarkerManager.parseMarkers(r.itemMarker,i.map),i.kartaMarkerManager.parseMarkers(r.mapChangeMarker,i.map),i.aikaMarkerManager.parseMarkers(r.questMarker,i.map),i.noteMarkerManager.parseMarkers(r.noteMarker,i.map)):(i.kirjaMarkerManager.setUnparsedMarkers(r.kirjaPageMarker),i.kortistoMarkerManager.setUnparsedMarkers(r.npcMarker),i.styrMarkerManager.setUnparsedMarkers(r.itemMarker),i.kartaMarkerManager.setUnparsedMarkers(r.mapChangeMarker),i.aikaMarkerManager.setUnparsedMarkers(r.questMarker),i.noteMarkerManager.setUnparsedMarkers(r.noteMarker)),i.mapLoaded()||i.mapLoaded(!0),i.acquireLock(),i.isNonDefaultChapterSelected()){var u=i.getSelectedChapterNumber();i.kirjaMarkerManager.adjustMarkersToChapter(u,i.map);i.kortistoMarkerManager.adjustMarkersToChapter(u,i.map);i.styrMarkerManager.adjustMarkersToChapter(u,i.map);i.kartaMarkerManager.adjustMarkersToChapter(u,i.map);i.aikaMarkerManager.adjustMarkersToChapter(u,i.map);i.noteMarkerManager.adjustMarkersToChapter(u,i.map)}i.isLoading(!1)}).fail(function(){i.errorOccured(!0);i.isLoading(!1)})},addMarkerToMap:function(n,t){if(this.currentValidManager&&!this.isLoading()){this.errorOccured(!1);var r=this.currentValidManager.createMarker(this.selectedMarkerObjectId(),t),i=this;r.done(function(t){i.setMarkerDragCallback(t);i.setMarkerPixelPosition(t,n,!0);i.isNonDefaultChapterSelected()&&t.setAddedInChapter(i.selectedChapter().number);i.saveNewMarker(t,n)})}},setMarkerDragCallback:function(n){var t=this;n.setOnDragEnd(function(){t.saveNewMarkerPos(n,t.map)})},openDeleteDialog:function(n,t){var i=this;n.setDeleteCallback(function(){i.showConfirmDeleteDialog(!0);i.markerToDelete=n;i.markerToDeleteManager=t})},deleteMarker:function(){!this.isNonDefaultChapterSelected()||this.markerToDelete.getAddedInChapter()>=0&&this.markerToDelete.getAddedInChapter()==this.getSelectedChapterNumber()?(this.markerToDeleteManager.removeMarker(this.markerToDelete,this.selectedChapter()),this.sendDeleteMarkerRequest(this.markerToDelete)):(this.markerToDelete.setDeletedInChapter(this.getSelectedChapterNumber()),this.saveMarker(this.markerToDelete));this.markerToDelete.removeFrom(this.map);this.closeConfirmDeleteDialog()},sendDeleteMarkerRequest:function(t){this.isLoading(!0);var i=this;jQuery.ajax({url:"/api/KartaApi/DeleteMapMarker?id="+this.id()+"&markerId="+t.id+"&markerType="+t.markerType,headers:n.Util.generateAntiForgeryHeader(),type:"DELETE"}).done(function(){i.isLoading(!1)}).fail(function(){i.errorOccured(!0);i.isLoading(!1)})},closeConfirmDeleteDialog:function(){this.showConfirmDeleteDialog(!1);this.markerToDelete=null;this.markerToDeleteManager=null},saveNewMarker:function(n,t){this.isLoading(!0);var i=this;jQuery.ajax({url:"/api/KartaApi/GetNewMapMarkerId",type:"GET"}).done(function(t){n.setId(t);i.saveMarker(n)}).fail(function(){n.removeFrom(t);i.currentValidManager.removeMarker(n);i.isLoading(!1);i.errorOccured(!0)})},setMarkerPixelPosition:function(n,t,i){var r=t.project(n.getLatLng(),t.getMaxZoom());!this.isNonDefaultChapterSelected()||i?n.setPixelCoords(r.x,r.y):n.setChapterPixelCoords(this.selectedChapter().number,r.x,r.y)},saveNewMarkerPos:function(n,t){var i=t.unproject([n.x,n.y],t.getMaxZoom()),r=n.getLatLng(),u={lat:r.lat-i.lat,lng:r.lng-i.lng};this.setMarkerPixelPosition(n,t,!1);n.moveGeometry(u);this.saveMarker(n)},saveMarker:function(t){var r,i;this.isReadonly()||(r={},r[t.serializePropertyName]=t.serialize(this.map),this.isLoading(!0),i=this,jQuery.ajax({url:"/api/KartaApi/SaveMapMarker?id="+this.id(),headers:n.Util.generateAntiForgeryHeader(),data:JSON.stringify(r),type:"POST",contentType:"application/json"}).done(function(){t.flagAsNotImplemented();i.isLoading(!1)}).fail(function(){i.errorOccured(!0);i.isLoading(!1)}))},resetMarkerObjectData:function(){this.selectedMarkerObjectId("");this.currentValidManager&&this.currentValidManager.resetSelectionData();this.currentValidManager=null},setCurrentObjectId:function(n,t){this.isInGeometryEditMode()&&this.leaveGeometryEditMode();this.selectedMarkerObjectId(n);this.currentValidManager&&this.currentValidManager!=t&&this.currentValidManager.resetSelectionData();this.currentValidManager=t},openMarkerNameDialog:function(t,i,r){return this.showMarkerNameDialog(!0),this.dialogMarkerName(t?t:""),this.showMarkerNameDialogDescription(i?!0:!1),this.dialogMarkerDescription(i&&r?r:""),this.dialogMarkerNameDef=new jQuery.Deferred,n.Util.setupValidation("#gn-markerNameForm"),this.dialogMarkerNameDef.promise()},saveMarkerName:function(){jQuery("#gn-markerNameForm").valid()&&(this.dialogMarkerNameDef!=null&&(this.dialogMarkerNameDef.resolve(this.dialogMarkerName(),this.dialogMarkerDescription()),this.dialogMarkerNameDef=null),this.closeMarkerNameDialog())},closeMarkerNameDialog:function(){this.showMarkerNameDialog(!1);this.dialogMarkerName("");this.showMarkerNameDialogDescription(!1);this.dialogMarkerDescription("");this.dialogMarkerNameDef!=null&&(this.dialogMarkerNameDef.reject(),this.dialogMarkerNameDef=null)},initEditGeometryToolbar:function(n){i.addColorpickerToDrawToolbar();this.mapGeometryToolbar=new L.Control.Draw({position:"topleft",draw:{rectangle:{showArea:!1,shapeOptions:{color:r}},polyline:{showLength:!1,shapeOptions:{color:r}},polygon:{showArea:!1,showLength:!1,shapeOptions:{color:r}},circle:{showRadius:!1,shapeOptions:{color:r}},colorPicker:{availableGeometryColors:this.availableGeometryColors,viewModel:this},circlemarker:!1,marker:!1},edit:!1});var t=this;n.on("layerremove",function(n){t.geometryEditMarker!=null&&t.geometryEditMarker.isMarker(n.layer)&&t.leaveGeometryEditMode()});n.on(L.Draw.Event.CREATED,function(n){if(t.geometryEditMarker){var i=n.layer;t.isLoading(!0);t.errorOccured(!1);jQuery.ajax({url:"/api/KartaApi/GetNewMapMarkerId",type:"GET"}).done(function(n){i.id=n;t.geometryEditMarker.addGeometry(i);t.geometryEditMarkerManager.addGeometryToLayer(i);i.options.editing||(i.options.editing={});i.editing.enable();i.on("edit",function(){t.saveMarker(t.geometryEditMarker)});i.on("click",function(){t.openGeometrySettingsDialog(i)});jQuery(i.getElement()).addClass("gn-kartaGeometryEditable");t.saveMarker(t.geometryEditMarker)}).fail(function(){t.isLoading(!1);t.errorOccured(!0)})}})},enterGeometryEditMode:function(n,t){this.resetMarkerObjectData();this.geometryEditMarker&&this.geometryEditMarker.setGeometryEditMode(!1);this.isInGeometryEditMode()||this.map.addControl(this.mapGeometryToolbar);n.closePopup();this.geometryEditMarker=n;this.geometryEditMarkerManager=t;this.isInGeometryEditMode(!0);var i=this;n.setGeometryEditMode(!0,function(){i.saveMarker(i.geometryEditMarker)},function(n){i.openGeometrySettingsDialog(n)})},leaveGeometryEditMode:function(){this.isInGeometryEditMode()&&this.map.removeControl(this.mapGeometryToolbar);this.geometryEditMarker.setGeometryEditMode(!1);this.geometryEditMarker=null;this.geometryEditMarkerManager=null;this.isInGeometryEditMode(!1)},openGeometrySettingsDialog:function(n){this.showGeometrySettingDialog(!0);this.selectedGeometryColor(n.options.color);this.editGeometry=n},openDeleteGeometryDialog:function(){this.showConfirmGeometryDeleteDialog(!0)},deleteGeometry:function(){this.geometryEditMarker.removeGeometry(this.editGeometry,this.map);this.saveMarker(this.geometryEditMarker);this.closeConfirmGeometryDeleteDialog();this.closeMarkerGeometrySettingsDialog()},closeConfirmGeometryDeleteDialog:function(){this.showConfirmGeometryDeleteDialog(!1)},saveMarkerGeometrySettings:function(){this.editGeometry.setStyle({fillColor:this.selectedGeometryColor(),color:this.selectedGeometryColor()});this.saveMarker(this.geometryEditMarker);this.closeMarkerGeometrySettingsDialog()},closeMarkerGeometrySettingsDialog:function(){this.showGeometrySettingDialog(!1);this.editGeometry=null},acquireLock:function(){n.LockService.releaseCurrentLock();this.lockedByUser("");this.isReadonly(!1);var t=this;n.LockService.acquireLock("KartaMap",this.id()).done(function(n,i){n&&(t.isReadonly(!0),t.lockedByUser(i),t.resetMarkerObjectData(),t.kirjaMarkerManager.disable(),t.kortistoMarkerManager.disable(),t.styrMarkerManager.disable(),t.kartaMarkerManager.disable(),t.aikaMarkerManager.disable(),t.noteMarkerManager.disable())}).fail(function(){t.errorOccured(!0)})}}})(t.Map=t.Map||{})})(n.Karta=n.Karta||{})}(window.GoNorth=window.GoNorth||{});